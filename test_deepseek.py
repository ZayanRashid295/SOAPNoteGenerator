import asyncio
from api_clients import get_deepseek_soap

def read_conversation_from_file(file_path: str) -> str:
    """Reads the conversation text from a .txt file."""
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            return file.read()
    except FileNotFoundError:
        print(f"Error: File not found at {file_path}")
        return ""
    except Exception as e:
        print(f"Error reading file: {str(e)}")
        return ""

async def test_deepseek(file_path: str):
    """Tests the DeepSeek API using the provided conversation file."""
    conversation = read_conversation_from_file(file_path)
    if not conversation:
        print("No conversation content to process.")
        return

    print("Testing DeepSeek API...")
    soap_note = await get_deepseek_soap(conversation)

    if not soap_note:
        print("No SOAP note was generated by DeepSeek.")
        return

    print("\nGenerated SOAP Note by DeepSeek:")
    print("-" * 80)
    print(soap_note)
    print("-" * 80)

if __name__ == "__main__":
    conversation_file_path = "conversations/CAR0001.txt"
    asyncio.run(test_deepseek(conversation_file_path))